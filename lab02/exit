[1mdiff --git a/src/lib.c b/src/lib.c[m
[1mindex 56582cf..bc118c9 100644[m
[1m--- a/src/lib.c[m
[1m+++ b/src/lib.c[m
[36m@@ -13,17 +13,17 @@[m [mchar *get_animal_type_name(enum animal_type type)[m
 {[m
 	char *result;[m
 	switch (type) {[m
[31m-	case CAT:[m
[31m-		result = "–ö—ñ—Ç";[m
[32m+[m	[32mcase ANDREY:[m
[32m+[m		[32mresult = "–ê–Ω–¥—Ä–µ–π";[m
 		break;[m
[31m-	case DOG:[m
[31m-		result = "–°–æ–±–∞–∫–∞";[m
[32m+[m	[32mcase OLEG:[m
[32m+[m		[32mresult = "–û–ª–µ–≥";[m
 		break;[m
[31m-	case COW:[m
[31m-		result = "–ö–æ—Ä–æ–≤–∞";[m
[32m+[m	[32mcase DANIL:[m
[32m+[m		[32mresult = "–î–∞–Ω–∏–ª";[m
 		break;[m
[31m-	case PIG:[m
[31m-		result = "–°–≤–∏–Ω—è";[m
[32m+[m	[32mcase ARTEM:[m
[32m+[m		[32mresult = "–ê—Ä—Ç—ë–º";[m
 		break;[m
 	default:[m
 		result = "N/A";[m
[1mdiff --git a/src/lib.h b/src/lib.h[m
[1mindex 2d3728e..c35c729 100644[m
[1m--- a/src/lib.h[m
[1m+++ b/src/lib.h[m
[36m@@ -25,10 +25,10 @@[m
  * –¢–∏–ø —Ç–≤–∞—Ä–∏–Ω–∏[m
  */[m
 enum animal_type {[m
[31m-	PIG, /**< –°–≤–∏–Ω—è */[m
[31m-	COW, /**< –ö–æ—Ä–æ–≤–∞ */[m
[31m-	DOG, /**< –°–æ–±–∞–∫–∞ */[m
[31m-	CAT, /**< –ö—ñ—Ç */[m
[32m+[m	[32mANDREY, /**< –ê–Ω–¥—Ä–µ–π */[m
[32m+[m	[32mOLEG, /**< –û–ª–µ–≥ */[m
[32m+[m	[32mDANIL, /**< –î–∞–Ω–∏–ª */[m
[32m+[m	[32mARTEM, /**< –ê—Ä—Ç—ë–º */[m
 	ANIMAL_TYPE_COUNT /**< –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–≤–∞—Ä–∏–Ω */[m
 };[m
 [m
[1mdiff --git a/test/test.c b/test/test.c[m
[1mindex b8d80bf..a6aebd7 100644[m
[1m--- a/test/test.c[m
[1m+++ b/test/test.c[m
[36m@@ -23,9 +23,9 @@[m [munsigned short test_get_animal_by_name()[m
 #define DATA_SIZE 6[m
 [m
 	unsigned short is_success = 1;[m
[31m-	enum animal_type input_data[] = { CAT, DOG, COW, PIG, ANIMAL_TYPE_COUNT, ANIMAL_TYPE_COUNT + 1 };[m
[31m-	char *expected_values[] = { "–ö—ñ—Ç",   "–°–æ–±–∞–∫–∞", "–ö–æ—Ä–æ–≤–∞",[m
[31m-				    "–°–≤–∏–Ω—è", "N/A",    "N/A" };[m
[32m+[m	[32menum animal_type input_data[] = { , ANDREY, OLEG, DANIL, ANIMAL_TYPE_COUNT, ANIMAL_TYPE_COUNT + 1 };[m
[32m+[m	[32mchar *expected_values[] = { "–ê–Ω–¥—Ä–µ–π",   "–û–ª–µ–≥", "–î–∞–Ω–∏–ª",[m
[32m+[m				[32m    "–ê—Ä—Ç—ë–º", "N/A",    "N/A" };[m
 [m
 	for (int i = 0; i < DATA_SIZE; i++) {[m
 		char *actual_value = get_animal_type_name(input_data[i]);[m
